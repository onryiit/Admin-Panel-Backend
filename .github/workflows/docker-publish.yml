name: Docker Image CI

# Bu workflow'un ne zaman çalışacağını belirler
on:
  push:
    branches: [ "master" ] # Sadece 'main' branch'ine push yapıldığında çalışsın (isterseniz 'master' veya başka branch yapabilirsiniz)
  # pull_request:
  #   branches: [ "main" ] # İsterseniz PR açıldığında da çalıştırabilirsiniz (build eder ama push etmez genelde)

jobs:
  build_and_push:
    runs-on: ubuntu-latest # Workflow'un çalışacağı sanal makine türü

    steps:
    # 1. Adım: Kodu checkout et (depodaki kodları sanal makineye indir)
    - name: Checkout repository
      uses: actions/checkout@v4 # Popüler bir GitHub Action

    # 2. Adım: Docker Hub'a giriş yap
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} # GitHub Secrets'dan kullanıcı adını al
        password: ${{ secrets.DOCKERHUB_TOKEN }}    # GitHub Secrets'dan token'ı al

    # 3. Adım: Docker imajını build et ve Docker Hub'a pushla
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . # Dockerfile'ın bulunduğu dizin (ana dizin varsayılır)
        file: ./dockerfile # Dockerfile'ın adı ve yolu (eğer farklıysa değiştirin)
        push: true # İmajı push etme işlemini etkinleştir
        tags: onryiit/admin-panel:latest # İmaj etiketi (örnek: ahmet/my-api:latest). 'latest' yerine commit hash'i gibi dinamik etiketler de kullanabilirsiniz.
        # İsteğe bağlı: Platform belirtmek isterseniz (örn. ARM için):
        # platforms: linux/amd64,linux/arm64